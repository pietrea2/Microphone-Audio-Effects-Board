--altshift_taps CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" NUMBER_OF_TAPS=1 TAP_DISTANCE=720 WIDTH=9 clken clock shiftin shiftout taps ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 22.1 cbx_altdpram 2023:02:14:18:07:11:SC cbx_altera_counter 2023:02:14:18:07:10:SC cbx_altera_syncram 2023:02:14:18:07:10:SC cbx_altera_syncram_nd_impl 2023:02:14:18:07:10:SC cbx_altshift_taps 2023:02:14:18:07:11:SC cbx_altsyncram 2023:02:14:18:07:10:SC cbx_cycloneii 2023:02:14:18:07:11:SC cbx_lpm_add_sub 2023:02:14:18:07:10:SC cbx_lpm_compare 2023:02:14:18:07:10:SC cbx_lpm_counter 2023:02:14:18:07:10:SC cbx_lpm_decode 2023:02:14:18:07:10:SC cbx_lpm_mux 2023:02:14:18:07:11:SC cbx_mgl 2023:02:14:18:07:18:SC cbx_nadder 2023:02:14:18:07:11:SC cbx_stratix 2023:02:14:18:07:11:SC cbx_stratixii 2023:02:14:18:07:11:SC cbx_stratixiii 2023:02:14:18:07:11:SC cbx_stratixv 2023:02:14:18:07:11:SC cbx_util_mgl 2023:02:14:18:07:11:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION altsyncram_ere1 (address_a[9..0], address_b[9..0], clock0, clocken0, data_a[8..0], wren_a)
RETURNS ( q_b[8..0]);
FUNCTION cntr_kmf (clk_en, clock)
RETURNS ( q[9..0]);

--synthesis_resources = M10K 1 
SUBDESIGN shift_taps_nst
( 
	clken	:	input;
	clock	:	input;
	shiftin[8..0]	:	input;
	shiftout[8..0]	:	output;
	taps[8..0]	:	output;
) 
VARIABLE 
	altsyncram2 : altsyncram_ere1;
	cntr1 : cntr_kmf;

BEGIN 
	altsyncram2.address_a[] = cntr1.q[];
	altsyncram2.address_b[] = cntr1.q[];
	altsyncram2.clock0 = clock;
	altsyncram2.clocken0 = clken;
	altsyncram2.data_a[] = ( shiftin[]);
	altsyncram2.wren_a = B"1";
	cntr1.clk_en = clken;
	cntr1.clock = clock;
	shiftout[8..0] = altsyncram2.q_b[8..0];
	taps[] = altsyncram2.q_b[];
END;
--VALID FILE
